@model CompanyManagement.Models.OrdersViewModel

@{
    ViewBag.Title = "Add Orders";
}

<button type="button" class="btn btn-info" data-toggle="modal" data-target="#AddModal">
    Create Order
</button>

<div class="modal fade" id="AddModal" tabindex="1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h3 style="font-weight:bold">CREATE ORDER</h3>
            </div>
            <div class="modal-body" style="margin:12px">
                <div>
                    @using (Html.BeginForm("_AddOrder"))
                    {
                        <div class="form-horizontal">
                            @Html.HiddenFor(model => model.IdOrder)
                            <span class="alert-danger">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            </span>
                            <div class="row">
                                <div class="form-group">
                                    <div class="col-xs-6">
                                        @Html.Label("Supplier", new { @class = "control-label" })
                                        @Html.DropDownListFor(model => model.IdSupplier, Model.SupplierList, " ", new { @class = "form-control" })
                                        @*@Html.LabelFor(model => model.Description, new { @class = "control-label" })
                                            @Html.TextBoxFor(model => model.Description, new { @class = "form-control" })*@
                                    </div>
                                    <div class="col-xs-6">
                                        @Html.LabelFor(model => model.Date, new { @class = "control-label" })
                                        @Html.TextBoxFor(model => model.Date, new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group">
                                    <div class="col-xs-12">
                                        @Html.LabelFor(model => model.Description, new { @class = "control-label" })
                                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @style = "max-width: 100%; width : 100%" })
                                        @*@Html.Label("Supplier", new { @class = "control-label" })
                                            @Html.DropDownListFor(model => model.IdSupplier, Model.SupplierList, " ", new { @class = "form-control" })*@
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group">
                                    <div class="col-xs-6">
                                        @Html.Label("Products", new { @class = "control-label" })
                                    </div>
                                    <div class="col-xs-4">
                                        @Html.Label("Quantity", new { @class = "control-label" })
                                    </div>
                                </div>
                                <div id="productsContainer">
                                    @for (int a = 0; a < Model.OrderProduct.Count; a++)
                                    {
                                        <div id="OrderProduct@(a)">
                                            <div class="form-group">
                                                <div class="col-xs-6">
                                                    @Html.DropDownListFor(model => model.OrderProduct[a].IdProduct, Model.ProductsList, " ", new { @class = "form-control" })
                                                </div>
                                                <div class="col-xs-4">
                                                    @Html.TextBoxFor(model => model.OrderProduct[a].Qty, new { @class = "form-control" })
                                                </div>
                                                <div class="col-xs-2">
                                                    <button type="button" onclick="removeOrderProduct('OrderProduct@(a)','OrderProduct_@(a)__Qty')" class="btn glyphicon glyphicon-minus btn-danger" data-toggle="modal" data-target=""></button>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                            <button type="button" onclick="addorderProductElement()" class="btn glyphicon glyphicon-plus btn-info btn-block">
                            </button>
                            <div class="modal-footer">
                                <input type="submit" value="Save" class="btn btn-success" />
                                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    function addorderProductElement() {
        $.ajax({
            url: '@Url.Action("_AddOrderProduct", "Order")?index=' + $("#productsContainer").children().length,
            type: 'GET',
            success: function (data) {
                console.log(data);
                $("#productsContainer").append(data);
            }
        });
    }

    function removeOrderProduct(id, idEditor) {

        var editor = document.getElementById(idEditor);
        editor.value = 0;
        console.log(editor);
        console.log(editor.value);

        console.log(id);
        var container = document.getElementById(id);
        console.log(container);
        container.style.display = "none";

    }

</script>
